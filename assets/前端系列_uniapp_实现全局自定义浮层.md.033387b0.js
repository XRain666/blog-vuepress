import{_ as s,b as a,c as n,i as p}from"./app.e3fb18dd.js";const o="/XaviDocs/images/前端系列/uniapp-实现全局自定义浮层-1.png",C=JSON.parse('{"title":"UniApp中实现全局自定义浮层","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、手动在需要的页面添加组件（不实用）","slug":"一、手动在需要的页面添加组件-不实用","link":"#一、手动在需要的页面添加组件-不实用","children":[]},{"level":2,"title":"二、透明页面模拟弹窗","slug":"二、透明页面模拟弹窗","link":"#二、透明页面模拟弹窗","children":[]}],"relativePath":"前端系列/uniapp/实现全局自定义浮层.md","lastUpdated":1677761461000}'),l={name:"前端系列/uniapp/实现全局自定义浮层.md"},e=p('<h1 id="uniapp中实现全局自定义浮层" tabindex="-1">UniApp中实现全局自定义浮层 <a class="header-anchor" href="#uniapp中实现全局自定义浮层" aria-hidden="true">#</a></h1><p>业务场景中有许多的全局浮层需求，例如<code>WEB</code>端常见的登录框浮层，带有抢单功能的<code>APP</code>、小程序等</p><img src="'+o+`" alt="浮层例子" width="200" style="margin:0 auto;"><p>在<code>WEB</code>端可以通过将浮层组件定义在顶层父组件中的方式实现，但<code>uniapp</code>的<code>App.vue</code>中不能写视图元素，也无法使用<code>vue-router</code>的嵌套路由功能，无法以常规方式实现</p><h2 id="一、手动在需要的页面添加组件-不实用" tabindex="-1">一、手动在需要的页面添加组件（不实用） <a class="header-anchor" href="#一、手动在需要的页面添加组件-不实用" aria-hidden="true">#</a></h2><p>最简单能想到的方式是在每一个要用到的页面引入组件，并处理相关逻辑</p><p>导入可以用<a href="https://uniapp.dcloud.net.cn/collocation/pages.html#easycom" target="_blank" rel="noreferrer">easycom</a>规范的组件，省略每个页面的导入、注册语句</p><p>组件使用逻辑可以用<a href="https://v2.cn.vuejs.org/v2/guide/mixins.html#%E5%85%A8%E5%B1%80%E6%B7%B7%E5%85%A5" target="_blank" rel="noreferrer">Vue2-mixin</a>或<a href="https://cn.vuejs.org/guide/reusability/composables.html" target="_blank" rel="noreferrer">Vue3-Hooks</a>的方式复用，省略重复的逻辑代码</p><p>但每个页面需要机械式的插入<code>&lt;CompName /&gt;</code>组件使用语句，不是一个适合应用的方法</p><hr><p>也有网友提供了自动插入的脚本，本质上也是将公共代码插入到每个页面中，只是交由了脚本完成：</p><p><code>vue2</code> + <code>webpack</code>：<a href="https://github.com/1977474741/vue-inset-loader" target="_blank" rel="noreferrer">vue-inset-loader</a></p><p><code>vue3</code> + <code>vite</code>：<a href="https://github.com/hantaogo/vite-plugin-vue-insert-code" target="_blank" rel="noreferrer">vite-plugin-vue-insert-code</a></p><h2 id="二、透明页面模拟弹窗" tabindex="-1">二、透明页面模拟弹窗 <a class="header-anchor" href="#二、透明页面模拟弹窗" aria-hidden="true">#</a></h2><p>通过设置<code>pages.json</code>中页面的<code>style</code>属性，让页面背景色透明，再添加浮现的页面跳转动画效果，模拟弹窗的效果</p><p>配置代码（IOS端测试成功，其他设备需要测试兼容性）：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">disableScroll</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">app-plus</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">backgroundColorTop</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">transparent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">backgroundColorBottom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">transparent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">background</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">transparent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">titleNView</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">scrollIndicator</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">popGesture</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">none</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">animationType</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fade-in</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,17),t=[e];function r(c,D,F,i,y,u){return a(),n("div",null,t)}const A=s(l,[["render",r]]);export{C as __pageData,A as default};
