import{_ as s,b as a,c as n,i as p}from"./app.976197cd.js";const u=JSON.parse('{"title":"UniApp对比原生小程序","description":"","frontmatter":{},"headers":[{"level":2,"title":"功能实现","slug":"功能实现","link":"#功能实现","children":[]},{"level":2,"title":"性能体验","slug":"性能体验","link":"#性能体验","children":[]},{"level":2,"title":"社区生态","slug":"社区生态","link":"#社区生态","children":[]},{"level":2,"title":"开发体验","slug":"开发体验","link":"#开发体验","children":[]},{"level":2,"title":"扩展性","slug":"扩展性","link":"#扩展性","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"前端系列/uniapp/UniApp对比原生小程序.md","lastUpdated":1677761461000}'),l={name:"前端系列/uniapp/UniApp对比原生小程序.md"},e=p(`<h1 id="uniapp对比原生小程序" tabindex="-1">UniApp对比原生小程序 <a class="header-anchor" href="#uniapp对比原生小程序" aria-hidden="true">#</a></h1><p>uniapp和原生小程序都有不少的槽点，但相对来说更推荐uniapp</p><p>uniapp官方文档-<a href="https://uniapp.dcloud.net.cn/select.html" target="_blank" rel="noreferrer">选型指南</a>提供了详细的多方对比评测，需要深入了解可以阅读参考</p><p>APP端的跨端框架发展迅猛，本文仅针对小程序端进行对比</p><blockquote><p>我个人的看法是：涉及跨端那就是无底的大坑，但uniapp是权衡下还不错的选择</p></blockquote><h2 id="功能实现" tabindex="-1">功能实现 <a class="header-anchor" href="#功能实现" aria-hidden="true">#</a></h2><p>uniapp编写小程序最终是将代码转换为原生小程序</p><p>uniapp本身不限制底层API调用，兼容小程序JS SDK与小程序自定义组件，即使uniapp尚未封装，仍可以直接编写原生写法。同时支持了各家平台的视图层脚本语言，微信wxs、百度filter、阿里sjs</p><blockquote><p><strong>uniapp开发小程序在功能上与原生小程序没有区别</strong></p></blockquote><h2 id="性能体验" tabindex="-1">性能体验 <a class="header-anchor" href="#性能体验" aria-hidden="true">#</a></h2><p>uniapp因为需要跨端，内部会做层层封装、转换，看似是增加了运行负担，但其实常规场景下uniapp的性能体验更好</p><p>微信小程序文档-<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/runtime_setData.html" target="_blank" rel="noreferrer">合理使用setData</a>一文中明确说明：数据量大小、setData频率均会影响运行性能</p><p>因为setData需要将数据序列化后全量从逻辑层传到数据层，异步的触发视图层更新，且每一次调用setData均会触发虚拟DOM树的遍历、更新，甚至页面重新渲染</p><p>例如官方评测中提供的例子：向数组中新增数据时，需要将原有数据、新增数据合并、序列化后一起传输</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">listData</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> []  </span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#82AAFF;">onReachBottom</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//上拉加载  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">listData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listData</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">listData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">Api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getNews</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 新增数据  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">setData</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">listData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 全量数据，发送数据到视图层  </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 例如原有1000条，新增20条后，setData仍然需要从逻辑层传递1020条数据到视图层</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>原生语法中上诉场景需要手动优化：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">listData</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> []  </span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#82AAFF;">onReachBottom</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//上拉加载  </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 通过长度获取下一次渲染的索引  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listData</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{};</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//新变更数据  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getNews</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">newData</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">listData[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//赋值，索引递增  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)   </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">setData</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">newData</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">//增量数据，发送数据到视图层</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      this.setData({</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        listData[21] = xxx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        listData[22] = xxx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      })</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>uniapp的实现中使用了diff策略，最小量的传输数据，减少通信损耗；以及vue中的异步更新机制，先在虚拟DOM中应用一次事件循环中的所有更改，再将最小变更作用到视图，避免重复触发更新</p><p>可以类比vue开发与原生开发，如不做特殊优化，原生性能通常是不及框架性能的</p><blockquote><p><strong>优化后的原生性能 &gt; uniapp性能 &gt; 未优化的原生性能</strong></p></blockquote><h2 id="社区生态" tabindex="-1">社区生态 <a class="header-anchor" href="#社区生态" aria-hidden="true">#</a></h2><p>因为均作用在小程序平台，大多数的插件或者问题解决方案是比较容易相通的。所以在社区生态的比较上可以基本忽略差异，例如搜索问题时两个社区都可以尝试</p><p>微信小程序需要在管理后台中搜索添加插件，uniapp则是提供了开放的插件市场</p><p>在社区活跃程度上，DCLOUD社区与微信开放社区均较为火热，大多数的问题都有对应的帖子（虽然实际业务中也会有很多问题找不到明确的答案）</p><blockquote><p><strong>uniapp与微信小程序在生态上都较为完善</strong></p></blockquote><h2 id="开发体验" tabindex="-1">开发体验 <a class="header-anchor" href="#开发体验" aria-hidden="true">#</a></h2><p>原生小程序自创语法被吐槽为“不伦不类”，对于开发者来说相当于重学一套新语法，大幅提升学习成本</p><p>uniapp采用的vue语法+小程序api的方式则更为友好，上手难度大幅度降低</p><p>在编辑器上，uniapp有自研的HBuilderX。虽然也是被吐槽不断，但相当于微信原生开发者工具来说，提供了可视化配置，代码提示，转到定义，easycom，快速新建项目、文件以及方便的编译打包辅助功能等，内置支持状态管理工具vuex、pinia，支持预处理器，新ES语法，工程化支持更好等</p><blockquote><p><strong>uniapp开发体验大幅优于原生小程序</strong></p></blockquote><h2 id="扩展性" tabindex="-1">扩展性 <a class="header-anchor" href="#扩展性" aria-hidden="true">#</a></h2><p>开发小程序的一大目的就是背靠平台，便于引流。而uniapp主打的开发一次，多端覆盖能够很方便的将应用扩展到多个平台，对于企业来说具有较高的价值</p><blockquote><p><strong>uniapp保留扩展性，没有坏处</strong></p></blockquote><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><table><thead><tr><th></th><th>uni-app</th><th>原生</th></tr></thead><tbody><tr><td>功能</td><td>相同</td><td>相同</td></tr><tr><td>性能</td><td>框架自动优化</td><td>需要手动优化</td></tr><tr><td>社区生态</td><td>丰富，更多高性能组件</td><td>丰富</td></tr><tr><td>开发体验</td><td>纯vue体验，上手容易，工程化能力强</td><td>自创语法，工程化能力弱</td></tr><tr><td>多端能力</td><td>同时支持H5、多家小程序、跨平台App</td><td>只能用于单一平台</td></tr></tbody></table>`,35),t=[e];function o(r,c,i,y,F,D){return a(),n("div",null,t)}const b=s(l,[["render",o]]);export{u as __pageData,b as default};
